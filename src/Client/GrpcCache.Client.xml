<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrpcCache</name>
    </assembly>
    <members>
        <member name="T:GrpcCache.Client.CacheMemory">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.Get``1(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.GetAll``1(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.AddOrUpdate``1(System.String,``0,GrpcCache.Client.CacheTime,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.AddOrUpdate``1(System.String,``0,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.Remove``1(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.RemoveAll``1(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.RemoveAll(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GrpcCache.Client.CacheMemory.Exists``1(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Tiny">
            <summary>
            5 Minutes
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Little">
            <summary>
            30 Minutes
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.VeryLow">
            <summary>
            1 Hour
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Low">
            <summary>
            2 Hours
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Normal">
            <summary>
            4 Hours
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.High">
            <summary>
            8 Hours
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.VeryHigh">
            <summary>
            12 Hours
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Day">
            <summary>
            24 Hours
            </summary>
        </member>
        <member name="F:GrpcCache.Client.CacheTime.Minute1">
            <summary>
            1 Minute
            </summary>
        </member>
        <member name="T:GrpcCache.Client.ICacheMemory">
            <summary>
            GrpcCache client class<br/>
            Server url must added in AppSetting.json <example>"CacheMemory":"http://localhost:8050/"</example>
            </summary>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.AddOrUpdate``1(System.String,``0,GrpcCache.Client.CacheTime,System.Int32)">
            <summary>
            Add item to cache server
            </summary>
            <typeparam name="T">Item class type</typeparam>
            <param name="key">Key of item, Saved format is <code>typeof(T).FullName:Key</code></param>
            <param name="data">data to add</param>
            <param name="time">Cache storage time</param>
            <param name="provider">Provider id to separate values in different systems</param>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.AddOrUpdate``1(System.String,``0,System.Int32,System.Int32)">
            <summary>
            Add item to cache server
            </summary>
            <typeparam name="T">Item class type</typeparam>
            <param name="key">Key of item, Saved format is <code>typeof(T).FullName:Key</code></param>
            <param name="data">data to add</param>
            <param name="time">Cache storage time</param>
            <param name="provider">Provider id to separate values in different systems</param>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.Get``1(System.String,System.Int32)">
            <summary>
            Get stored item from cache
            </summary>
            <typeparam name="T">Item class type for cast to</typeparam>
            <param name="key">Key of item, Saved format is <code>typeof(T).FullName:Key</code></param>
            <param name="provider">Provider id to separate values in different systems</param>
            <returns>Returns a value if it exists, otherwise null is returned</returns>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.GetAll``1(System.String,System.Int32)">
            <summary>
            Get all items started with key
            </summary>
            <typeparam name="T">Item class type for cast to</typeparam>
            <param name="key">Start key of item</param>
            <param name="provider">Provider id to separate values in different systems</param>
            <returns>Return list of exists items</returns>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.Remove``1(System.String,System.Int32)">
            <summary>
            Remove item from cache
            </summary>
            <typeparam name="T">Item class type for cast to</typeparam>
            <param name="key">Key of item, Saved format is <code>typeof(T).FullName:Key</code></param>
            <param name="provider">Provider id to separate values in different systems</param>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.RemoveAll``1(System.String,System.Int32)">
            <summary>
            Remove all items started with key
            </summary>
            <typeparam name="T">Item class type</typeparam>
            <param name="startKey">Start key of item</param>
            <param name="provider">Provider id to separate values in different systems</param>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.RemoveAll(System.Int32)">
            <summary>
            Remove all items
            </summary>
            <param name="provider">Provider id to separate values in different systems</param>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.Exists``1(System.String,System.Int32)">
            <summary>
            Check exists item is in cache
            </summary>
            <typeparam name="T">Item class type</typeparam>
            <param name="key">Key of item, Saved format is <code>typeof(T).FullName:Key</code></param>
            <param name="provider">Provider id to separate values in different systems</param>
            <returns>If exists return True</returns>
        </member>
        <member name="M:GrpcCache.Client.ICacheMemory.GetStatus">
            <summary>
            Get status of cached items
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
